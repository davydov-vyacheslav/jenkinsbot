plugins {
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "io.freefair.lombok" version "6.4.3"
    id 'jacoco'
    id 'java'
}

group = 'com.javanix.bot'
version = '0.0.9-SNAPSHOT'
sourceCompatibility = '8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.github.pengrad:java-telegram-bot-api:6.0.1'

    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:3.4.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

task copyReadMe(type: Copy, description: "Copy Project Info file to resources") {
    from project.projectDir
    into 'src/main/resources'
    include 'CHANGELOG.md'
}

processResources.dependsOn(copyReadMe)

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = true
        html.required = true
    }

    // Exclude startup classes / configurations / CLI (aka external services)
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/javanix/bot/jenkinsBot/cli/*",
                    "com/javanix/bot/jenkinsBot/database/DatabaseFactory.class",
                    "com/javanix/bot/jenkinsBot/Main.class",
                    "com/javanix/bot/jenkinsBot/JenkinsBotConfiguration.class",
                    "com/javanix/bot/jenkinsBot/TelegramBotWrapper.class",
                    "com/javanix/bot/jenkinsBot/CacheService.class"
            ])
        }))
    }
}